MEMORY {
	imagRegisters : ORIGIN = 0x00, LENGTH = 0x20
    zp : ORIGIN = __rc31 + 1, LENGTH = 0x0F0 - (__rc31 + 1)
	hwRegisters : ORIGIN = 0xF0, LENGTH = 0x10
    stack (rw) : ORIGIN = 0x100, LENGTH = 0x0100 
    ram (rw) : ORIGIN = 0x200, LENGTH = 0xff00 
}

REGION_ALIAS("c_readonly", ram)
REGION_ALIAS("c_writeable", ram)

SECTIONS {
    .text : {
        *(.text*)
        *(.rodata*)
    } > ram
    
    .data : {
        *(.data*)
    } > ram
    
    .bss : {
        *(.bss*)
        *(COMMON)
    } > ram
}

__rc0 = 0x00;
INCLUDE imag-regs.ld
ASSERT(__rc0 == 0x00, "Inconsistent zero page map.")
ASSERT(__rc31 == 0x1f, "Inconsistent zero page map.")

OUTPUT_FORMAT { 
  /* SPC 700 file header string */
  BYTE(83) BYTE(78) BYTE(69) BYTE(83) BYTE(45)
  BYTE(83) BYTE(80) BYTE(67) BYTE(55) BYTE(48) BYTE(48)
  BYTE(32)
  BYTE(83) BYTE(111) BYTE(117) BYTE(110) BYTE(100) BYTE(32)
  BYTE(70) BYTE(105) BYTE(108) BYTE(101) BYTE(32)
  BYTE(68) BYTE(97) BYTE(116) BYTE(97) BYTE(32)
  BYTE(118) BYTE(48) BYTE(46) BYTE(51) BYTE(48)

  /* SPC 700 file magic numbers */
  BYTE(26)
  BYTE(26)
  /* SPC 700 has ID666 Tag */
  BYTE(27)
  /* SPC 700 version minor */
  BYTE(30)
  /* SPC 700 Program counter */
  SHORT(_start-3) 
  /* SPC 700 AXY PSW SP registers */
  BYTE(0)
  BYTE(0)
  BYTE(0)
  BYTE(0)
  BYTE(0)
  /* SPC 700 reserved */
  BYTE(0)
  BYTE(0)
  /* 32 padding bytes reserved for titles I believe */
  BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0)
  BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0) BYTE(0)

  /* Blindly copied from a working example */
  BYTE(0x55) BYTE(0x4E) BYTE(0x44) BYTE(0x45) BYTE(0x52) BYTE(0x54) BYTE(0x41) BYTE(0x4C) BYTE(0x45) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x67) BYTE(0x65) BYTE(0x65) BYTE(0x65) BYTE(0x65) BYTE(0x65) BYTE(0x65) BYTE(0x65) BYTE(0x74) BYTE(0x74) BYTE(0x74) BYTE(0x20) BYTE(0x64) BYTE(0x75) BYTE(0x6E) BYTE(0x6B) BYTE(0x65) BYTE(0x64) BYTE(0x20) BYTE(0x6F) BYTE(0x6E) BYTE(0x21) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x30) BYTE(0x31) BYTE(0x2F) BYTE(0x30) BYTE(0x35) BYTE(0x2F) BYTE(0x32) BYTE(0x30) BYTE(0x31) BYTE(0x36) BYTE(0x00) BYTE(0x33) BYTE(0x31) BYTE(0x32) BYTE(0x31) BYTE(0x30) BYTE(0x30) BYTE(0x30) BYTE(0x30) BYTE(0x54) BYTE(0x6F) BYTE(0x62) BYTE(0x79) BYTE(0x20) BYTE(0x46) BYTE(0x6F) BYTE(0x78) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x30) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x36) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x20) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0x00) BYTE(0xFF) BYTE(0x31) BYTE(0x4C) BYTE(0x0F) BYTE(0x00) BYTE(0x00) BYTE(0x0A) BYTE(0x00) BYTE(0xFF) BYTE(0xFF) BYTE(0x10) BYTE(0xFF) BYTE(0xFF) BYTE(0x00) BYTE(0xFF) BYTE(0xFF) 

  /* SPC 700 rom image */  
  FULL(imagRegisters)
  FULL(zp)
  FULL(hwRegisters)
  FULL(ram)
}